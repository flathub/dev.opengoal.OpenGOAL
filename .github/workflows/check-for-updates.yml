name: Check for updates

on:
  schedule:
   - cron: "00 08 * * SUN"
  workflow_dispatch:

env:
  GIT_USER_NAME: github-actions[bot]
  GIT_USER_EMAIL: github-actions[bot]@users.noreply.github.com
  FLATPAK_ID: dev.opengoal.OpenGOAL

jobs:
  flatpak-external-data-checker:
    name: 'Check update (${{ matrix.branch || github.ref_name }})'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ['master']
            
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          submodules: true
          ref: ${{ matrix.branch }}

      - uses: docker://ghcr.io/flathub/flatpak-external-data-checker:latest
        with:
          args: --edit-only ${{ env.FLATPAK_ID }}.yml

      - name: Check if updated
        id: is-updated
        run: |
          git_status=$(git status -s -uno)
          echo "git_status=$git_status" >> $GITHUB_ENV
          if [ -n "$git_status" ]; then
            echo "updated=true" >> $GITHUB_ENV
          else
            echo "updated=false" >> $GITHUB_ENV
          fi

      - uses: actions/setup-python@v2
        if: env.updated == 'true'
        with:
          python-version: 3.9

      - name: Install flatpak-node-generator and requirements
        if: env.updated == 'true'
        run: |
          python3 -m pip install pipx
          python3 -m pip install pipreqs
          pipreqs flatpak-builder-tools
          python3 -m pip install -r flatpak-builder-tools/requirements.txt
          cd flatpak-builder-tools/node && pipx install .

      - name: Generate sources
        if: env.updated == 'true'
        run: |
          git submodule update --init
          ver=$(grep release dev.opengoal.OpenGOAL.appdata.xml | grep -m1 -oP '(?<=version=.)[^"]+')
          git clone --recursive -b "v${ver}" --depth=1 https://github.com/open-goal/launcher.git
          flatpak-builder-tools/cargo/flatpak-cargo-generator.py -o cargo-sources.json launcher/src-tauri/Cargo.lock
          flatpak-node-generator yarn launcher/yarn.lock
          rm -rf launcher
          
      - name: Reset
        run: |
          git checkout -- ${FLATPAK_ID}.yml *.xml

      - uses: docker://ghcr.io/flathub/flatpak-external-data-checker:latest
        name: Recheck and open PR
        env:
          GIT_AUTHOR_NAME: Flatpak External Data Checker
          GIT_COMMITTER_NAME: Flatpak External Data Checker
          GIT_AUTHOR_EMAIL: ${{ env.GIT_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ env.GIT_USER_EMAIL }}
          EMAIL: ${{ env.GIT_USER_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --update --never-fork ${{ env.FLATPAK_ID }}.yml